/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // JJ = ESC
        combo_esc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp ESC>;
        };

        // RT = (
        combo_lpar {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp LPAR>;
        };

        // YU = )
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp RPAR>;
        };

        // FG = [
        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LBKT>;
        };

        // HJ = ]
        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp RBKT>;
        };

        // VB = {
        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp LBRC>;
        };

        // NM = }
        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp RBRC>;
        };
    };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |    +   |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL,= |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp GRAVE &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp MINUS
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt LCTRL EQUAL
           &kp LALT &mt LGUI RET &lt 1 TAB   &lt 2 BKSP  &kp SPACE &kp LSHIFT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &kp LCTRL  &trans &trans &trans &trans &trans   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans &trans &trans &trans &trans   &trans   &trans   &trans &trans    &trans &trans
                    &kp LALT &mt LGUI RET &trans   &lt 2 BKSP &kp SPACE &kp LSHIFT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                         &kp LALT &mt LGUI RET &lt 1 TAB   &kp BSPC  &kp SPACE &kp LSHIFT
                        >;
                };
        };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |      | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// | BTCLR|     |     |     |     |     |   |     |     |     |     |     | C_RESET|
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &trans &trans &trans &trans &trans &trans
   &trans     &trans       &trans       &trans       &trans       &trans        &trans &trans &trans &trans &trans &trans
   &bt BT_CLR &trans       &trans       &trans       &trans       &trans        &trans &trans &trans &trans &trans &reset
                          	            &trans       &trans       &trans        &trans &trans &trans
                        >;
                };
};
